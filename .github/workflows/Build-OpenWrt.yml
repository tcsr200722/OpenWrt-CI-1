# https://github.com/deplives/OpenWrt-CI


name: Build OpenWrt


on:

  workflow_dispatch:

    inputs:

      firmware_commit:
        description: 'commit hash'
        required: false
        default: ''

      release:
        description: 'release note'
        required: true
        default: 'regular'


env:

  REPO: https://github.com/coolsnowwolf/lede.git
  BRANCH: master
  CONFIG: x86-64.config
  FEEDS_SH: feeds.sh
  CONFIG_SH: config.sh
  TIMEZONE: Asia/Shanghai


jobs:

  Compile:

    runs-on: ubuntu-20.04

    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:

    - name: checkout
      uses: actions/checkout@main
      with:
        ref: master
        fetch-depth: 0

    - name: Space cleanup
      run: |
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d /usr/share/dotnet /usr/local/lib/android /etc/mysql /etc/php /opt/ghc
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        df -hT $PWD

    - name: Install dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      if: success() && !cancelled()
      run: |
        sudo timedatectl set-timezone "$TIMEZONE"
        sudo -E apt-get update
        sudo -E apt-get -y install $(curl -fsSL https://git.io/openwrt-ubuntu-2004)
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      if: success() && !cancelled()
      run: |
        git clone $REPO -b $BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        if [ -n "${{ github.event.inputs.firmware_commit }}" ]; then 
          git reset --hard ${{ github.event.inputs.firmware_commit }}
        fi
        echo "COMMITHASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

    - name: Cache toolchain
      uses: deplives/cacheopenwrt@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt


    - name: Run feeds.sh
      run: |
        chmod +x $FEEDS_SH
        cd openwrt
        $GITHUB_WORKSPACE/$FEEDS_SH

    - name: Update feeds
      if: success() && !cancelled()
      run: cd openwrt && ./scripts/feeds update -a

    - name: Load configuration
      if: success() && !cancelled()
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG ] && mv $CONFIG openwrt/.config

    - name: Run config.sh
      run: |
        chmod +x $CONFIG_SH
        cd openwrt
        $GITHUB_WORKSPACE/$CONFIG_SH ${{ env.COMMITHASH }}
    
    - name: Install feeds
      if: success() && !cancelled()
      run: cd openwrt && ./scripts/feeds install -a

    - name: Download package
      if: success() && !cancelled()
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec rm -f {} \;

    - name: Job start
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          编译开始
          Lede Commit Hash ${{ env.COMMITHASH }}
          Config Commit Hash ${{ github.sha }}
          ${{ github.event.inputs.release }}

    - name: Compile firmware
      if: success() && !cancelled()
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=sc

    - name: Organize files
      if: success() && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        shopt -s extglob
        rm -rf !(*.img|*.vmdk)
        shopt -u extglob
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Generate release tag
      id: tag
      if: success() && !cancelled()
      run: |
        echo "::set-output name=release_tag::OpenWrt-$(date +"%Y%m%d%H%M")"
        touch release.txt
        echo Lede Commit Hash ${{ env.COMMITHASH }} > release.txt
        echo Config Commit Hash ${{ github.sha }} >> release.txt
        echo ${{ github.event.inputs.release }} >> release.txt
        
    - name: Release
      uses: softprops/action-gh-release@v1
      if: success() && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Compile has succeeded
      uses: appleboy/telegram-action@master
      if: success() && !cancelled()
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          OpenWrt 编译成功
          Lede Commit Hash ${{ env.COMMITHASH }}
          Config Commit Hash ${{ github.sha }}
          ${{ steps.tag.outputs.release_tag }}
          ${{ github.event.inputs.release }}

    - name: Compile has failed
      uses: appleboy/telegram-action@master
      if: failure() || cancelled()
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          OpenWrt 编译失败
          Lede Commit Hash ${{ env.COMMITHASH }}
          Config Commit Hash ${{ github.sha }}
          ${{ github.event.inputs.release }}